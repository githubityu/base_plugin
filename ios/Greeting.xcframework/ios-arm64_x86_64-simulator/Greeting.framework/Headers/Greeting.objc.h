// Objective-C API for talking to web3wallet Go package.
//   gobind -lang=objc web3wallet
//
// File is generated by gobind. Do not edit.

#ifndef __Greeting_H__
#define __Greeting_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class GreetingCryptoParams;
@class GreetingKeystore;
@class GreetingNetWork;
@class GreetingWalletResponse;

/**
 * CryptoParams 结构体
 */
@interface GreetingCryptoParams : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull cipher;
@property (nonatomic) NSString* _Nonnull cipherText;
// skipped field CryptoParams.CipherParams with unsupported type: map[string]interface{}

@property (nonatomic) NSString* _Nonnull kdf;
// skipped field CryptoParams.KDFParams with unsupported type: map[string]interface{}

@property (nonatomic) NSString* _Nonnull mac;
@end

/**
 * Keystore 结构体
 */
@interface GreetingKeystore : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field Keystore.Crypto with unsupported type: web3wallet.CryptoParams

@property (nonatomic) NSString* _Nonnull address;
@property (nonatomic) long version;
@property (nonatomic) int64_t timeStamp;
@end

/**
 * NetWork 表示网络类型结构体，这里假设它有一个value字段用于存储网络类型标识
 */
@interface GreetingNetWork : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@end

/**
 * WalletResponse 结构体用于JSON序列化
 */
@interface GreetingWalletResponse : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull address;
@property (nonatomic) NSString* _Nonnull privateKey;
@property (nonatomic) NSString* _Nonnull publicKey;
@property (nonatomic) NSString* _Nonnull mnemonic;
@property (nonatomic) NSString* _Nonnull keystore;
@end

// skipped const F1 with unsupported type: web3wallet.WalletType

// skipped const F3 with unsupported type: web3wallet.WalletType

FOUNDATION_EXPORT NSString* _Nonnull const GreetingMAIN;
FOUNDATION_EXPORT NSString* _Nonnull const GreetingTEST;

FOUNDATION_EXPORT GreetingWalletResponse* _Nullable GreetingCreateWalletF1(NSString* _Nullable password, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull GreetingGeneraMnemonic(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT GreetingKeystore* _Nullable GreetingGenerateKeystore(NSString* _Nullable privateKey, NSString* _Nullable password, NSError* _Nullable* _Nullable error);

// skipped function GetLongPrivateKeyFromPrivateKey with unsupported parameter or return types


FOUNDATION_EXPORT NSString* _Nonnull GreetingGetPrivateKeyFromLongPrivateKey(NSString* _Nullable longPrivateKey, NSError* _Nullable* _Nullable error);

/**
 * IsHexString 判断是否为十六进制字符串
 */
FOUNDATION_EXPORT BOOL GreetingIsHexString(NSString* _Nullable s);

FOUNDATION_EXPORT GreetingWalletResponse* _Nullable GreetingRestoreWalletByPrivate(NSString* _Nullable privateKeyStr, NSString* _Nullable password, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT GreetingWalletResponse* _Nullable GreetingRestoreWalletFromKeystore(NSString* _Nullable keystoreJSON, NSString* _Nullable password, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT GreetingWalletResponse* _Nullable GreetingRestoreWalletFromMnemonic(NSString* _Nullable mnemonic, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull GreetingSayHi(NSString* _Nullable text);

FOUNDATION_EXPORT BOOL GreetingValidatePrivateKey(NSString* _Nullable privateKey);

#endif
